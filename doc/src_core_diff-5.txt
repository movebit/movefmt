diff --git a/src/core/fmt.rs b/src/core/fmt.rs
index 85d81d1..67890d9 100644
--- a/src/core/fmt.rs
+++ b/src/core/fmt.rs
@@ -544,9 +544,18 @@ impl Format {
 
         // step7
         if b_new_line_mode || had_rm_added_new_line {
-            tracing::debug!("end_of_nested_block, b_new_line_mode = true");
-            if nested_token_head != Tok::If && kind.kind != NestKind_::Bracket && kind.kind != NestKind_::Type {
-                // 20240426 -- for [] and <> not to add new line
+            tracing::debug!("end_of_nested_block, b_new_line_mode = true, last_ret = {}", self.last_line());
+            let mut b_break_line_before_kind_end = true;
+            if kind.kind == NestKind_::ParentTheses && self.syntax_extractor.call_extractor.paren_in_call(kind) {
+                // 20240428 -- for call_fn(), don't add new line
+                b_break_line_before_kind_end = false;
+            }
+            if nested_token_head == Tok::If || kind.kind == NestKind_::Bracket || kind.kind == NestKind_::Type {
+                // 20240426 -- for [] and <>  don't add new line
+                b_break_line_before_kind_end = false;
+            }
+
+            if b_break_line_before_kind_end {
                 self.new_line(Some(kind.end_pos));
             }
         } else if b_add_space_around_brace {
@@ -887,17 +896,6 @@ impl Format {
             if new_line_after {
                 return;
             }
-            // if self.judge_change_new_line_when_over_limits(content.clone(), *tok, *note, next_token) {
-            //     tracing::debug!("last_line = {:?}", self.last_line());
-            //     tracing::debug!(
-            //         "SimpleToken{:?}, add a new line because of split line",
-            //         content
-            //     );
-            //     self.inc_depth();
-            //     self.new_line(None);
-            //     self.dec_depth();
-            //     return;
-            // }
             if expr_fmt::need_space(token, next_token) {
                 self.push_str(" ");
             }
