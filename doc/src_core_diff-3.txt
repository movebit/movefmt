diff --git a/src/core/fmt.rs b/src/core/fmt.rs
index 3526eaf..4f8b3cd 100644
--- a/src/core/fmt.rs
+++ b/src/core/fmt.rs
@@ -451,11 +451,16 @@ impl Format {
                     && first_ele_len > 8;
             }
             NestKind_::ParentTheses => {
-                let opt_component_break_mode = nested_token_len > self.global_cfg.max_width();
+                let nested_and_comma_pair = expr_fmt::get_nested_and_comma_num(elements);
+                let mut opt_component_break_mode = nested_token_len > self.global_cfg.max_width();
                 if self.format_context.borrow().cur_tok == Tok::If {
                     new_line_mode = false;
                 } else if self.syntax_extractor.fun_extractor.is_parameter_paren_in_fun_header(kind) {
                     new_line_mode = self.get_cur_line_len() + nested_token_len > self.global_cfg.max_width();
+                    if (nested_and_comma_pair.0 >= 4 || nested_and_comma_pair.1 >= 4) &&
+                        nested_token_len as f32 > max_len_when_no_add_line {
+                        opt_component_break_mode = true;
+                    }
                 } else if self.get_cur_line_len() > self.global_cfg.max_width() && !elements.is_empty() {
                     new_line_mode = true;
                 } else {
@@ -688,22 +693,13 @@ impl Format {
                 self.push_str(" ");
             }
 
-            // step4 -- format elements
-            let need_change_line_for_each_item_in_paren = if NestKind_::ParentTheses == kind.kind {
-                if opt_component_break_mode.is_none() {
-                    !expr_fmt::judge_simple_paren_expr(kind, elements, self.global_cfg.clone())
-                } else {
-                    opt_component_break_mode.unwrap_or_default()
-                }
-            } else {
-                b_new_line_mode
-            };
+            // step4 -- format element
             self.format_each_token_in_nested_elements(
                 kind,
                 elements,
                 delimiter,
                 has_colon,
-                need_change_line_for_each_item_in_paren,
+                opt_component_break_mode.unwrap_or(b_new_line_mode),
             );
 
             // step5 -- add_comments which before kind.end_pos
